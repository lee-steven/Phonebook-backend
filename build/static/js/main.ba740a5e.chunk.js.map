{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/people.js","App.js","index.js"],"names":["Filter","handleFilter","onChange","PersonForm","props","onSubmit","addPerson","handleNameChange","value","newName","handleNumberChange","newNumber","type","Persons","filterResults","deletePerson","map","person","key","name","number","onClick","id","Notification","message","notificationStyle","error","color","fontStyle","fontSize","background","borderStyle","borderRadius","padding","marginBottom","className","style","baseURL","axios","get","then","response","data","newObject","post","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","newMessage","setNewMessage","setError","useEffect","peopleService","people","filter","query","toUpperCase","indexOf","event","target","preventDefault","checkPerson","findIndex","responsePerson","concat","setTimeout","window","confirm","updatedPerson","p","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba740a5e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({handleFilter}) => {\n\n    return (\n        <div>\n            <h2>Search Phonebook</h2>\n            <div>Filter: <input onChange={handleFilter}/></div>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n\n    return (\n        <form onSubmit={props.addPerson}>\n        <div> name: <input onChange={props.handleNameChange} value={props.newName} /></div>\n        <div> number: <input onChange={props.handleNumberChange} value={props.newNumber}/></div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form>\n    )\n}\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({filterResults, deletePerson}) => {\n    return (\n        <div>\n        {filterResults.map(person => {\n            return ( \n                <p key={person.name}>\n                    {person.name} {person.number} \n                    <button onClick={()=>{deletePerson(person)}} id={person.id} >delete</button>\n                </p>\n            )\n        }\n        )}\n        </div>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message, error }) => {\n    let notificationStyle ={}\n    if(error){\n        notificationStyle = {\n            color: 'red',\n            fontStyle: 'italic',\n            fontSize: 20,\n            background: 'lightgrey',\n            borderStyle: 'solid',\n            borderRadius: 5,\n            padding: 10,\n            marginBottom: 10,\n          }\n    } else {\n        notificationStyle = {\n            color: 'green',\n            fontStyle: 'italic',\n            fontSize: 20,\n            background: 'lightgrey',\n            borderStyle: 'solid',\n            borderRadius: 5,\n            padding: 10,\n            marginBottom: 10,\n          }\n    }\n   \n\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\" style={notificationStyle}>\n        {message}\n      </div>\n    )\n\n   \n  }\n\nexport default Notification\n  ","import axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseURL)\n    return request.then(response => response.data)\n}\n\nconst addPerson = (newObject) => {\n    const request = axios.post(baseURL, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseURL}/${id}`)\n    return request.then(response => response.data)\n}\n\n// url, id, updated object\nconst updatePersonNumber = (id, newObject) => {\n    const request = axios.put(`${baseURL}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, addPerson, deletePerson, updatePersonNumber }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nimport peopleService from './services/people'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newMessage, setNewMessage ] = useState(null)\n  const [ error, setError ] = useState(false)\n\n  // Retrieves all People from server\n  useEffect(() => {\n    peopleService.getAll()\n      .then(people => setPersons(people))\n  }, [])\n\n\n  const handleFilter = (event) => setNewFilter(event.target.value)\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n\n  // Returns filtered results\n  const filterResults = persons.filter(person => {\n    const query = newFilter.toUpperCase()\n    const personName = person.name.toUpperCase()\n    if(personName.indexOf(query) > -1){\n      return person.name\n    } \n    return \"\"\n  })\n\n  // Add a person to the phonebook\n  const addPerson = (event) => {\n    event.preventDefault();\n    const checkPerson = persons.findIndex(person => person.name === newName)\n\n    if(checkPerson === -1){\n      const newPerson = { name: newName, number: newNumber}\n\n      peopleService.addPerson(newPerson)\n        .then(responsePerson => {\n          setPersons(persons.concat(responsePerson)) // IMPORTANT to set to responsePerson and not newPerson\n          setNewName('')\n          setNewNumber('')\n          setError(false)\n          setNewMessage(`${responsePerson.name} has been successfully added!`)\n          setTimeout(() => {\n            setNewMessage(null)\n          }, 5000)\n        })\n      \n    } else {\n      const confirmation = window.confirm(`${newName} is already added to the phonebook, replace old phone number with the updated one?`)\n      // Updates person's number in phonebook\n      if(confirmation){\n        const person = persons[checkPerson]\n\n        const updatedPerson = {\n          ...person, number: newNumber\n        }\n\n        peopleService.updatePersonNumber(person.id, updatedPerson)\n          .then(responsePerson => { \n            // updates front end\n            setPersons(persons.map(p => p.id === responsePerson.id ? responsePerson : p))\n            setError(false)\n            setNewMessage(`${responsePerson.name}'s number has been updated!`)\n            setTimeout(() => {\n              setNewMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setNewName('')\n            setNewNumber('')\n            setError(true)\n            setNewMessage(`${person.name} has already been deleted from the server`)\n            setTimeout(() => {\n              setNewMessage(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.name === person.name ? \"\" : p))\n          })\n      }\n    }\n  }\n\n  // Delete a person from the phonebook\n  const deletePerson = (person) => {\n    const confirmation = window.confirm(`Delete ${person.name} from your Phonebook?`)\n    if(confirmation){\n      peopleService.deletePerson(person.id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== person.id)) // gets rid of name in front end\n        })\n        .catch(error => {\n          setError(true)\n          setNewMessage(`${person.name} has already been deleted from the server`)\n          setTimeout(() => {\n            setNewMessage(null)\n          }, 5000)\n        })\n    }\n    \n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={newMessage} error={error}/>\n\n      <Filter handleFilter={handleFilter}/>\n\n      <h2>Add to Phonebook</h2>\n      <PersonForm \n        addPerson={addPerson} \n        handleNameChange={handleNameChange}\n        newName={newName}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n      />\n\n      <h2>Numbers</h2>\n      <Persons \n        filterResults={filterResults} \n        persons={persons} \n        deletePerson={deletePerson}\n      />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);"],"sourceRoot":""}